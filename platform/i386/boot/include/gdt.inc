;
; This program is free software; you can redistribute it and/or
; modify it under the terms of the GNU General Public License
; as published by the Free Software Foundation; either version 2
; of the License, or (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with this program; if not, write to the Free Software
; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Copyright (C) Roger George Doss. All Rights Reserved.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; @module
;	gdt.inc
; @description
;	Adaptation of GDT manipulation code for
;	NASM assembler.
%ifndef _GDT_INC
%define _GDT_INC

;
; GDT:-
;
; Intel segment descriptor:
;
; 31          24         19   16                 7           0
; ------------------------------------------------------------
; |             | |B| |A|       | |   |1|0|E|W|A|            |
; | BASE 31..24 |G|/|0|V| LIMIT |P|DPL|  TYPE   | BASE 23:16 |
; |             | |D| |L| 19..16| |   |1|1|C|R|A|            |
; ------------------------------------------------------------
; |                             |                            |
; |        BASE 15..0           |       LIMIT 15..0          |
; |                             |                            |
; ------------------------------------------------------------

; descriptor type
;
D_LDT		EQU	 200h	;LDT segment
D_TASK		EQU	 500h	;Task gate
D_TSS		EQU	 900h	;TSS
D_CALL		EQU	0C00h	;386 call gate
D_INT		EQU	0E00h	;386 interrupt gate
D_TRAP		EQU	0F00h	;386 trap gate
D_DATA		EQU	1000h	;Data segment
D_CODE		EQU	1800h	;Code segment

; include special flags as necessaray
D_DPL3		EQU	6000h	; descriptor privaledge
D_DPL2		EQU	4000h
D_DPL1		EQU	2000h
; present bit is included by default
D_PRESENT	EQU	8000h	; Present
D_NOT_PRESENT	EQU	8000h	; Not present

;Segment descriptors (not gates) may include:
D_ACC		EQU	 100h	;Accessed (Data or Code)

D_WRITE		EQU	 200h	;Writable (Data segments only)
D_READ		EQU	 200h	;Readable (Code segments only)
D_BUSY		EQU	 200h	;Busy (TSS only)

D_EXDOWN	EQU	 400h	;Expand down (Data segments only)
D_CONFORM	EQU	 400h	;Conforming  (Code segments only)

D_BIG		EQU	  40h	;Default to 32 bit mode (USE32)
D_BIG_LIM	EQU	  80h	;Limit is in 4K units

;
;  gate:-
;
;   %1 base,
;   %2 limit,
;   %3 flags
;
;  A gate is identified as any descriptor whose flags has bit 10 set and 
;  bit 12 clear.
;
;  For a gate, the following bit arrangement occurs:
;
;  subField                Final location
;  ------------------      --------------
;  Selector[0..15]             16..31
;  Minor control bits          32..39
;  Major control bits          40..47
;  Offset[0..15]                0..15
;  Offset[16..31]              48..63
;
;
%macro gate 3
	dw	%1
	dw	%2
	dw	(%3)+D_PRESENT
	dw	(%1) >> 16
	%endmacro

;
;  desc:-
;
;   %1 base,
;   %2 limit,
;   %3 flags
;
;  subField                Final location
;  ------------------      --------------
;  Limit[0..15]                 0..15
;  Limit[16..19]               48..51
;  Minor control bits          52..57
;  Major control bits          40..47
;  Base[0..23]                 16..39
;  Base[24..31]                56..63
;
;  The last parameter to the desc macro contains all the control bits
;  combined.  It is generated by adding together the appropriate
;  D_ constants.  For all descriptors, it has the major control bits in D_
;  bits 8 to 15.  The minor control bits are in either D_ bits 0 to 7 or bits
;  4 to 7 depending on the type of descriptor.
;
;%macro desc 3
;    GLOBAL ?fixD%%jloc
;?fixD%%jloc:
;    dd  (%2) + ( ( (%3) ^ D_PRESENT ) << 16 ) , (%1)
;	%endmacro

;%macro desc 3
; 	dw	%2
; 	dw	%1
; 	db	(%1) >> 16
; 	db	((%3)+D_PRESENT) >> 8
; 	db	((%3) + ((%2) >> 16) & 0xFF)
;	db	(%1) >> 24
;   %endmacro

%macro desc 3
%if (%3) & (~(%3)>>2) & 0x400   ;Gate
	dw	%1
    dw	%2
 	dw	(%3)+D_PRESENT
 	dw	(%1) >> 16
%else                           ;Not a gate
 	dw	%2
 	dw	%1
 	db	(%1) >> 16
 	db	((%3)+D_PRESENT) >> 8
 	db	(%3) + ((%2) >> 16)
 	db	(%1) >> 24
%endif
%endmacro

%endif ; _GDT_INC
